<file_map>
/Users/namhp/Resilio.Sync/Perfume.Server
├── BottleManager.js
├── README.md
├── RackBuilder.js
├── SceneManager.js
├── UIController.js
├── codemcp.toml
├── package-lock.json
├── package.json
├── perfume.html
├── project_analysis.txt
├── project_analyzer.sh
├── scripts/
│   ├── README.md
│   ├── assignSlots.js
│   ├── getBottles.js
│   └── getDatabaseFields.js
└── server.js

--- File Tree Summary ---
Total Directories: 1
Total Files: 16
Total Size: 220012 bytes

File Type Distribution:
  JavaScript: 8 files (50.0%, 151653 bytes)
  Markdown: 2 files (12.5%, 1088 bytes)
  JSON: 2 files (12.5%, 45267 bytes)
  TOML: 1 files (6.2%, 799 bytes)
  HTML: 1 files (6.2%, 15939 bytes)
  Text: 1 files (6.2%, 4676 bytes)
  Shell Script: 1 files (6.2%, 590 bytes)
</file_map>

<dependency_map>
# Dependency Map
# The following map shows dependencies between files in the project.
# For each file, it lists:
#  - Classes, structs, interfaces, and functions defined in the file
#  - Modules and symbols imported by the file

BottleManager.js:
  defines:
    - functions: ['fetchAllNotionBottles', 'createBottleFromNotion', 'updateBottles', 'getBottleGlassColor', 'getLiquidColor', 'getFillPercentage', 'addLiquidToBottle', 'createLabelTexture', 'createBoardMesh', 'clipAndFillText', 'updateBottleCapColorOnServer', 'setCapColor', 'updateBottleSlotOnServer']
  imports:
    - three: ['* as THREE']
    - ./SceneManager.js: ['scene', 'camera', 'envMap']
    - ./RackBuilder.js: ['planeLayouts', 'slotOccupants', 'SLOT_WIDTH_DEPTH', 'BOTTLE_HEIGHT']

RackBuilder.js:
  defines:
    - functions: ['buildAllPlanes', 'parsePlaneDefinition', 'parseSingleRack', 'createColumnLabelTexture', 'createSteppedRack', 'rowCenterZ', 'createBeveledWall', 'addPlaneLights']
  imports:
    - three: ['* as THREE']
    - ./SceneManager.js: ['scene', 'envMap', 'csm']
    - RectAreaLightHelper: ['RectAreaLightHelper']

SceneManager.js:
  defines:
    - functions: ['export', 'initScene', 'animate', 'onWindowResize', 'updateSceneWeather', 'updateWeatherDisplay', 'createGradientBackground', 'setupEnvironmentMap', 'generateEnvironmentTexture', 'drawWeatherEffects', 'setupPBRLighting', 'setupCSM']
  imports:
    - three: ['* as THREE']
    - OrbitControls: ['OrbitControls']
    - RectAreaLightUniformsLib: ['RectAreaLightUniformsLib']
    - RectAreaLightHelper: ['RectAreaLightHelper']
    - CSM: ['CSM']

UIController.js:
  defines:
    - classes: ['from', 'LoadingManager', 'based']
    - functions: ['initApp', 'fetchConfig', 'parseRackConfigs', 'to', 'calls', 'debounce', 'updateWeather', 'handleWeatherChange', 'updateSceneWeather', 'updateWeatherDisplay', 'setupWeatherUpdates', 'setupEventListeners', 'to', 'getTopLevelBottle', 'canHighlightBottle', 'onCanvasMouseDown', 'onCanvasMouseMove', 'onCanvasMouseUp', 'findNearestSlotInPlane', 'onKeyDown', 'onKeyUp', 'cancelDrag', 'moveDraggingBottleToPlane', 'markAsSource', 'markAsTarget', 'revertMark', 'swapBottlePositions', 'applyFilter', 'fold', 'isFilterBoxVisible', 'toggleFilterBox', 'toggleHelpWindow', 'handleActiveBottleNotice', 'updateInfoBoard', 'hideInfoBoard', 'suggestPerfumesForWeather', 'highlightSuggestedBottles', 'clearSuggestions', 'suggestPerfumeLayering', 'generateLayeringDescription', 'findCategories', 'to', 'joinWithAnd', 'displayLayeringSuggestionBoard', 'clearLayeringSuggestions', 'displaySuggestionBoard', 'to']
  imports:
    - three: ['* as THREE']
    - ./SceneManager.js: ['initScene', 'animate', 'onWindowResize', 'camera', 'updateSceneWeather']
    - ./RackBuilder.js: ['buildAllPlanes', 'parseSingleRack', 'planeLayouts', 'slotOccupants']
    - ./BottleManager.js: ['fetchAllNotionBottles', 'createBottleFromNotion', 'clickableBottles', 'updateBottleSlotOnServer', 'setCapColor', 'updateBottleCapColorOnServer', 'updateBottles']

scripts/assignSlots.js:
  defines:
    - functions: ['parseRackDefinition', 'parsePlaneDefinition', 'buildAllPlanesFromEnv', 'main', 'isSlotValid', 'findFirstFreeSlot', 'updateBottleSlotInNotion', 'fetchAllNotionPages']
  imports:
    - @notionhq/client: ['Client']

scripts/getBottles.js:
  defines:
    - functions: ['fetchAllBottles', 'fetchAllNotionPages', 'fetchAllBottles']
  imports:
    - @notionhq/client: ['Client']

scripts/getDatabaseFields.js:
  defines:
    - functions: ['getDatabaseFields']
  imports:
    - fs: ['fs']
    - path: ['path']
    - @notionhq/client: ['Client']

server.js:
  imports:
    - express: ['express']
    - path: ['path']
    - @notionhq/client: ['Client']
    - node-fetch: ['fetch']
    - fs: ['fs']
</dependency_map>
